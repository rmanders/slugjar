buildscript {
  ext {
    springBootVersion = '1.5.9.RELEASE'
    gradleReleaseVersion = '2.6.0'
    kotlinVersion = '1.2.61'
  }
  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("net.researchgate:gradle-release:${gradleReleaseVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
  }
}

plugins {
  id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'net.researchgate.release'

sourceCompatibility = 1.8
targetCompatibility = 1.8
//afterReleaseBuild.dependsOn uploadArchives

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
  compile('ch.qos.logback:logback-core:1.2.3')
  compile('com.auth0:java-jwt:3.3.0')
  compile('com.google.code.gson:gson:2.8.2')
  compile('commons-lang:commons-lang:2.6')
  compile('io.springfox:springfox-swagger2:2.8.0')
  compile('io.springfox:springfox-swagger-ui:2.8.0')
  compile('org.dizitart:nitrite:2.1.1')
  compile('org.hibernate:hibernate-validator:5.3.4.Final')
  compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
  compile('org.slf4j:slf4j-api:1.7.25')
  compile('org.springframework.boot:spring-boot-configuration-processor')
  compile('org.springframework.boot:spring-boot-starter-actuator')
  compile('org.springframework.boot:spring-boot-starter-security')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.data:spring-data-mongodb:1.10.8.RELEASE')
  compileOnly ('org.projectlombok:lombok:1.16.18')
  testCompile('com.openpojo:openpojo:0.8.6')
  testCompile 'junit:junit:4.12'
}

jar {

  //dependsOn(':frontend:build')
  into('public') {
    from "${projectDir}/src/main/node/dist"
  }

  archiveName = "${artifactId}.jar"
  baseName = "${artifactId}"
  version = "${version}"
  from sourceSets.main.allSource
  manifest {
    attributes(
        "Implementation-Title": "${groupId}.${artifactId}",
        "Implementation-Version": "${version}",
        "Source-Compatibility": project.sourceCompatibility,
        "Target-Compatibility": project.targetCompatibility,
        "Build-Date": (new Date()).format('yyyy-MM-dd HH:mm')
    )
  }
}
node {
  nodeModulesDir = file("${project.projectDir}/src/main/node")
}

test {
  jacoco {
    append = false
    destinationFile = file("${buildDir}/jacoco/jacocoTest.exec")
    classDumpDir = file("${buildDir}/jacoco/classpathdumps")
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.0.2'
}

//clean.dependsOn npm_run_clean

build.dependsOn npm_run_build

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
